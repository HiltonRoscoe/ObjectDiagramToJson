#set($packages = $array.createArray())
#set($void = $array.addCollection($packages, $Package))
#set($void = $array.addCollection($packages, $SmartPackage))
#foreach ($package in $sorter.sort($packages, "qualifiedName"))
#set($qualifiedName = $package.qualifiedName)
#set ($classList = $array.createArray())
#macro( instanceSpec $element)
#foreach($classifier in $element.classifier)
#set ($className = $classifier.name)
#set ($classOwner = $classifier.owner.name)
#end
{
    "@type": "$classOwner#[[.]]#$className",
#foreach($slot in $element.slot) 
#set ($slotName = $slot.getDefiningFeature().getName())
#if ($slot.hasValue())
#foreach($valueSpecification in $slot.getValue())
#if($valueSpecification.instance && $valueSpecification.instance.class.name != "com.nomagic.uml2.ext.magicdraw.classes.mdkernel.impl.EnumerationLiteralImpl")
"$slotName": #instanceSpec($valueSpecification.instance),
#else
"$slotName": "$report.createValueSpecificationText($valueSpecification)",
#end
#end
#end
#end
}
#end
#foreach ($element in $report.getOwnedElementsIncludingAdditional($package, true))
#if ($element.elementType == "instancespecification")
const $element.name = #instanceSpec($element);
#end
#end
#end