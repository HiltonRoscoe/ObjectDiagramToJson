#set($packages = $array.createArray())
#set($void = $array.addCollection($packages, $Package))
#set($void = $array.addCollection($packages, $SmartPackage))
#foreach ($package in $sorter.sort($packages, "qualifiedName"))
#set($qualifiedName = $package.qualifiedName)
#set ($classList = $array.createArray())
#macro( instanceSpec $element)
#foreach($classifier in $element.classifier)
#set ($className = $classifier.name)
#set ($classOwner = $classifier.owner.name)
#end
const $element.name = {
    "@type": "$classOwner#[[.]]#$className",
#foreach($slot in $element.slot) 
#set ($slotName = $slot.getDefiningFeature().getName())
#if ($slot.hasValue())
#foreach($valueSpecification in $slot.getValue())
## $valueSpecification.getClass().getName()
HEBBO $valueSpecification.instance.getValue()
$valueSpecification.instance.getClass()
#foreach($field in $valueSpecification.class.getMethods())
$field.getName()
HI
#end
"$slotName": "$report.createValueSpecificationText($valueSpecification)"
#end
#end
#end
};
#end
#foreach ($element in $report.getOwnedElementsIncludingAdditional($package, true))
#if ($element.elementType == "instancespecification")
#instanceSpec($element)
#end
#end
#end